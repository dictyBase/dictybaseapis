syntax = "proto3";

package dictybase.pubsub;
import "google/rpc/status.proto";
import "dictybase/user/user.proto";
import "dictybase/identity/identity.proto";

option cc_enable_arenas = true;
option go_package = "github.com/dictyBase/go-genproto/dictybaseapis/pubsub;pubsub";
option java_multiple_files = true;
option java_outer_classname = "PubSubProto";
option java_package = "org.dictybase.pubsub";
option objc_class_prefix = "DICTYAPI";

/*
* Definition for communicating the existence of a resource
* and if there's any error during the communication
*/
message Reply {
    // Flag to indicate the presence of resource
    bool exist = 1;
    // Status error model, look here 
    // for detail https://github.com/googleapis/googleapis/blob/master/google/rpc/status.proto
    google.rpc.Status status = 2;
}


/*
* Definition for replying various identity definition 
*/
message IdentityReply {
    // single user
    dictybase.identity.Identity identity = 1;  
    // Status error model, look here 
    // for detail https://github.com/googleapis/googleapis/blob/master/google/rpc/status.proto
    google.rpc.Status status = 2;
    // Flag to indicate the presence of resource
    bool exist = 4;
}


/*
* Definition for requesting identity information 
*/
message IdentityReq {
    // Unique id
    int64 id = 2;
    // An unique identifier provided by the third party.
    // Generally it's an email id, however it could be something else specifically
    // provided by an provider.
    string identifier = 2;
    // Name of the provider, for example, orcid, google, facebook etc.
    string provider = 3;
}

/*
* Definition for replying various user definition 
*/
message UserReply {
    // single user
    dictybase.user.User user = 1;  
    // user collection(list of users)
    dictybase.user.UserCollection users = 2;  
    // Status error model, look here 
    // for detail https://github.com/googleapis/googleapis/blob/master/google/rpc/status.proto
    google.rpc.Status status = 3;
    // Flag to indicate the presence of resource
    bool exist = 4;
}

// Defintion for communicating an identifer
message IdRequest {
    int64 id = 1;
}
